<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.back.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.back.pojo.User">
        <id property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="doc">
        doc.doc_id, doc.doc_name, doc.type,
        doc.created_time, doc.status,doc.is_delete
    </sql>

    <insert id="insertUser" parameterType="User">
        INSERT INTO users(user_id, user_name, email, password)
        VALUES (#{userId}, #{userName}, #{email}, #{password})
    </insert>

    <update id="updateUserInfo" parameterType="User">
        update users
        <trim prefix="set" suffixOverrides=",">
            <if test="userName != null and userName != '' ">
                user_name = #{userName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            user_id = #{userId},
        </trim>
        where user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="string">
        update users
        set password = #{password}
        where email = #{email}
    </update>

    <select id="selectAllUser" resultType="User">
        select *
        from users;
    </select>

    <select id="selectUserByEmail" parameterType="string" resultType="User">
        select *
        from users
        where email = #{email}
    </select>

    <select id="selectUserById" resultType="User">
        select user_id, user_name, email
        from users
        where user_id = #{userId}
    </select>

    <select id="selectAllDocCreateByUser" resultType="com.back.pojo.Document">
        select distinct
        <include refid="doc"></include>
        from users u
        join access ac on ac.user_id = #{userId} and ac.access_level = 1
        join document doc on doc.doc_id = ac.doc_id
        where doc.is_delete = 1
        ORDER BY doc.doc_id ASC
    </select>

    <select id="selectAllDocParticipate" resultType="com.back.pojo.Document">
        select distinct
        <include refid="doc"></include>
        from users u
        join access ac on ac.user_id = #{userId} and ac.access_level != 1
        join document doc on doc.doc_id = ac.doc_id
        where doc.is_delete = 1
        ORDER BY doc.doc_id ASC
    </select>

    <select id="selectAllDocCreateByUserByPage" resultType="com.back.pojo.Document">
        select distinct
        <include refid="doc"></include>
        from users u
        join access ac on ac.user_id = #{userId} and ac.access_level = 1
        join document doc on doc.doc_id = ac.doc_id
        where doc.is_delete = 1
        ORDER BY doc.doc_id ASC
        limit #{pageNum}, #{pageSize}
    </select>

    <select id="selectFileCountCreateByUser" resultType="java.lang.Integer">
        select distinct count(*)
        from access ac, document dc
        where ac.user_id = #{userId} and ac.access_level = 1
        and dc.doc_id = ac.doc_id
        and dc.is_delete = 1
    </select>

</mapper>
